project.description = 'VIVIDUS to Azure DevOps exporter'

buildscript {
    ext {
        springBootVersion = '3.5.7'
    }

    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin

tasks {
    javadocJar.enabled = false
    sourcesJar.enabled = false
}

dependencies {
    // https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/257
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-log4j2')

    implementation project(':vividus-http-client')
    implementation project(':vividus-util')
    implementation project(':vividus-engine')
    implementation project(':vividus-exporter-commons')

    implementation platform(libs.jackson.bom)
    implementation(libs.jackson.dataformat.xml)

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation platform(libs.junit.bom)
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly(libs.junit.platformLauncher)
    testImplementation platform(libs.mockito.bom)
    testImplementation(libs.mockito.junitJupiter)
    testImplementation(libs.slf4jTest)
}

configurations.all {
    exclude module: 'spring-boot-starter-logging'
}

// https://stackoverflow.com/a/62645933/2067574
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}
