<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd"
        default-lazy-init="true" profile="web,mobile_app">

    <context:component-scan base-package="org.vividus.jackson.databind.ui"/>
    <context:component-scan base-package="org.vividus.converter.ui" >
         <context:exclude-filter type="regex" expression="org\.vividus\.converter\.ui\..*\..*"/>
    </context:component-scan>

    <bean id="parentWebDriverFactory" class="org.vividus.selenium.AbstractWebDriverFactory" abstract="true" />

    <bean name="webDriverUrlProvider" class="org.vividus.selenium.StaticRemoteWebDriverUrlProvider">
        <constructor-arg index="0" value="${selenium.grid.url}" />
    </bean>

    <bean id="remoteWebDriverFactory" class="org.vividus.selenium.RemoteWebDriverFactory">
        <constructor-arg index="0" value="${selenium.grid.use-w3c}" />
        <constructor-arg index="1" value="${selenium.grid.retry-session-creation-on-http-connect-timeout}" />
    </bean>

    <bean id="webDriverProvider" class="org.vividus.selenium.WebDriverProvider"
          destroy-method="destroy">
        <property name="vividusWebDriverFactory" ref="vividusWebDriverFactory" />
        <property name="testContext" ref="testContext" />
    </bean>

    <bean class="org.vividus.selenium.session.WebDriverSessionInfo" lazy-init="false" />
    <bean class="org.vividus.selenium.WebDriverStartContext" lazy-init="false" />

    <bean id="waitActions" class="org.vividus.ui.action.WaitActions" />

    <bean class="org.vividus.ui.action.WaitFactory">
        <property name="timeout" value="${ui.wait.timeout}" />
        <property name="pollingPeriod" value="${ui.wait.polling-period}" />
    </bean>

    <bean class="org.vividus.ui.action.SearchActions" />
    <bean class="org.vividus.ui.action.JavascriptActions" />

    <bean class="org.vividus.ui.action.BarcodeActions" />

    <bean id="abstractElementAction" class="org.vividus.ui.action.search.AbstractElementAction"
          abstract="true">
        <property name="waitForElementTimeout" value="${ui.search.wait-for-element-timeout}" />
        <property name="retrySearchIfStale" value="${ui.search.retry-search-if-stale}" />
        <property name="waitActions" ref="waitActions" />
    </bean>

    <bean id="abstractPublishingScreenshotOnFailureMonitor" class="org.vividus.ui.monitor.AbstractPublishingScreenshotOnFailureMonitor"
          abstract="true">
        <property name="debugModes" value="${screenshot.on-failure.debug-modes}" />
    </bean>

    <bean class="org.vividus.ui.monitor.PublishingHarOnFailureMonitor">
        <constructor-arg index="0" value="${proxy.publish-har-on-failure}" />
    </bean>

    <bean class="org.vividus.proxy.ThreadedProxy" >
        <constructor-arg index="0" value="${proxy.host}" />
        <constructor-arg index="1" value="${proxy.ports}" />
        <constructor-arg index="2">
            <bean class="org.vividus.proxy.ProxyFactory">
                <property name="proxyHost" value="${proxy.connectable-host}"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="proxyServerFactory" class="org.vividus.proxy.ProxyServerFactory">
        <property name="trustAllServers" value="${proxy.trust-all-servers}" />
        <property name="mitmEnabled" value="${proxy.mitm.enabled}" />
        <property name="mitmManagerFactory">
            <bean class="org.vividus.proxy.mitm.MitmManagerFactory" />
        </property>
        <property name="mitmManagerOptions">
            <bean class="org.vividus.proxy.mitm.MitmManagerOptions" >
                <constructor-arg index="0" value="${proxy.mitm.mitm-manager-type}" />
                <constructor-arg index="1" value="${proxy.mitm.key-store.alias}" />
                <constructor-arg index="2" value="${proxy.trust-all-servers}" />
                <constructor-arg index="3" >
                    <bean class="org.vividus.http.keystore.KeyStoreOptions">
                        <constructor-arg index="0" value="${proxy.mitm.key-store.path}" />
                        <constructor-arg index="1" value="${proxy.mitm.key-store.password}" />
                        <constructor-arg index="2" value="${proxy.mitm.key-store.type}" />
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="advancedHostResolver">
            <bean class="org.vividus.proxy.dns.HostNameResolver">
                <property name="dnsMappingStorage" ref="localDnsStorage" />
            </bean>
        </property>
        <property name="captureTypes" value="${proxy.capture-types}"/>
    </bean>

    <bean id="runContextStoryReporter" class="org.vividus.RunContextStoryReporter">
        <property name="next">
            <bean class="org.vividus.proxy.ProxyAgentStoryReporter">
                <property name="proxyEnabled" value="${proxy.enabled}" />
                <property name="proxyRecordingEnabled" value="${proxy.recording.enabled}" />
                <property name="next" ref="reportControlStoryReporter" />
            </bean>
        </property>
    </bean>

    <bean class="org.vividus.ui.action.ExpectedSearchActionsConditions" />
    <bean class="org.vividus.ui.action.ExpectedSearchContextConditions" />

    <bean id="uiContext" class="#{T(java.lang.Boolean).parseBoolean('${ui.context.self-healing}') ? 'org.vividus.ui.context.SelfHealingUiContext' : 'org.vividus.ui.context.UiContext'}">
        <property name="testContext" ref="testContext" />
    </bean>

    <bean id="proxySteps" class="org.vividus.proxy.steps.ProxySteps" />

    <bean class="org.vividus.steps.ui.validation.DescriptiveSoftAssert" parent="softAssert" />

    <bean class="org.vividus.steps.ui.validation.BaseValidations" />

    <bean class="org.vividus.ui.action.search.ElementActionService" init-method="init"/>

    <bean class="org.vividus.ui.util.LocatorConversionUtils">
        <property name="dynamicLocators">
            <bean factory-bean="propertyMapper" factory-method="readValuesCaseInsensitively">
                <constructor-arg value="ui.locator." />
                <constructor-arg value="org.vividus.ui.action.search.LocatorPattern" />
            </bean>
        </property>
    </bean>

    <bean class="org.vividus.ui.listener.UiContextListener" lazy-init="false" />

    <bean id="abstractSourceCodePublishngOnFailureListener" class="org.vividus.ui.listener.AbstractSourceCodePublishingOnFailureListener"
          abstract="true">
        <property name="publishSourceOnFailure" value="${ui.publish-source-on-failure}" />
    </bean>

    <bean class="org.vividus.selenium.screenshot.ScreenshotFileNameGenerator" />

    <bean id="genericElementSteps" class="org.vividus.steps.ui.GenericElementSteps" />
    <bean id="genericWaitSteps" class="org.vividus.steps.ui.GenericWaitSteps" />
    <bean id="genericSetVariableSteps" class="org.vividus.steps.ui.GenericSetVariableSteps" />
    <bean id="genericSetContextSteps" class="org.vividus.steps.ui.GenericSetContextSteps" />
    <bean id="genericNestedSteps" class="org.vividus.steps.ui.GenericNestedSteps" />
    <bean id="navigationSteps" class="org.vividus.steps.ui.NavigationSteps" />
    <bean id="screenshotTakingSteps" class="org.vividus.steps.ui.ScreenshotTakingSteps" />
    <bean id="barcodeSteps" class="org.vividus.steps.ui.BarcodeSteps" />

    <bean class="org.vividus.ui.action.search.IndexElementFilter" />
    <bean class="org.vividus.ui.action.search.ElementAttributeFilter" />

    <bean class="org.vividus.selenium.screenshot.AbstractScreenshotTaker" id="abstractScreenshotTaker" abstract="true" />

    <bean id="abstractAshotFactory" class="org.vividus.selenium.screenshot.AbstractAshotFactory" abstract="true">
        <property name="screenshotShootingStrategy" value="${selenium.screenshot.strategy}" />
    </bean>

    <bean id="abstractScreenshotParametersFactory" class="org.vividus.ui.screenshot.AbstractScreenshotParametersFactory" abstract="true">
        <property name="ignoreStrategies">
             <util:map key-type="org.vividus.selenium.screenshot.IgnoreStrategy" map-class="java.util.LinkedHashMap">
                 <entry key="ELEMENT" value="${ui.visual.ignored-elements}"/>
                 <entry key="AREA" value="${ui.visual.ignored-areas}"/>
             </util:map>
         </property>
    </bean>

    <bean id="screenshotDebugger" class="org.vividus.selenium.screenshot.FilesystemScreenshotDebugger"
        init-method="cleanUp">
        <property name="debugScreenshotsLocation" value="${ui.screenshot.debug-directory}" />
    </bean>

    <bean id="executeScriptSteps" class="org.vividus.steps.ui.ExecuteScriptSteps" />

    <bean class="org.vividus.ui.converter.ParametersToAtomicActionConverter" />
    <bean class="org.vividus.ui.converter.PointConverter" />

    <util:list id="stepBeanNames-UI" value-type="java.lang.String">
        <idref bean="executeScriptSteps" />
        <idref bean="genericElementSteps" />
        <idref bean="genericWaitSteps" />
        <idref bean="genericSetVariableSteps" />
        <idref bean="genericSetContextSteps" />
        <idref bean="genericNestedSteps" />
        <idref bean="navigationSteps" />
        <idref bean="screenshotTakingSteps" />
        <idref bean="barcodeSteps" />
        <idref bean="proxySteps" />
    </util:list>

    <util:map id="propertyEditors-UI" key-type="java.lang.Class">
        <entry key="org.vividus.steps.WebDriverSessionScope">
            <bean class="org.vividus.beans.RelaxedEnumPropertyEditor">
                <constructor-arg value="org.vividus.steps.WebDriverSessionScope" />
            </bean>
        </entry>
        <entry key="org.vividus.model.IntegerRange">
            <bean class="org.vividus.beans.IntegerRangePropertyEditor" />
        </entry>
        <entry key="java.time.Duration">
            <bean class="org.vividus.beans.DurationPropertyEditor" />
        </entry>
    </util:map>

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="org.vividus.spring.StringToLocatorConverter" />
                <bean class="org.vividus.spring.StringToLocatorSetConverter" />
                <bean class="org.vividus.spring.StringToFormatConverter" />
            </set>
        </property>
    </bean>

    <bean id="context-height" class="org.vividus.ui.variable.SearchContextHeightDynamicVariable"/>
    <bean id="context-width" class="org.vividus.ui.variable.SearchContextWidthDynamicVariable"/>
    <bean id="context-x-coordinate" class="org.vividus.ui.variable.SearchContextXCoordinateDynamicVariable"/>
    <bean id="context-y-coordinate" class="org.vividus.ui.variable.SearchContextYCoordinateDynamicVariable"/>
    <bean id="source-code" class="org.vividus.ui.variable.SourceCodeDynamicVariable"/>

    <bean class="org.vividus.report.ui.ImageCompressor" >
        <property name="imageCompressionQuality" value="${ui.report.image-compression-quality}" />
    </bean>

    <bean id="freemarkerMethodCompressImage" class="org.vividus.report.ui.ImageBytesToBase64Method"  />
 </beans>
