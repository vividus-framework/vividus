name: Vividus CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Checkout (including submodules and tags)
      shell: bash
      # Fetch all history for all tags and branches: https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
      # Checkout submodules: https://github.com/actions/checkout#checkout-submodules
      run: |
        git fetch --prune --unshallow
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Cache ~/.gradle/caches
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Cache ~/.gradle/wrapper
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-


    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13.0.1

    - name: Build with Gradle
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ -n $SONAR_TOKEN ]; then
            ./gradlew build sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=vividus -Dsonar.projectKey=vividus-framework_vividus -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=768m"
        else
            echo No SONAR_TOKEN, SonarQube analysis will be skipped
            ./gradlew build -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=768m"
        fi

    - name: Integration tests
      run: ./gradlew :vividus-tests:runStories -Pvividus.configuration.environments=integration

    - name: Publish Integration tests report
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: Integration Tests - Allure report
        path: vividus-tests/output/reports/allure

    - name: System tests
      if: always()
      env:
        BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
        BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_KEY }}
        APPLITOOLS_EXECUTE_KEY: ${{ secrets.APPLITOOLS_EXECUTE_KEY }}
        APPLITOOLS_READ_KEY: ${{ secrets.APPLITOOLS_READ_KEY }}
      run: |
        if [[ -n $BROWSERSTACK_USER && -n $BROWSERSTACK_KEY && -n $APPLITOOLS_READ_KEY && -n $APPLITOOLS_READ_KEY ]]; then
            ./gradlew :vividus-tests:runStories -Pvividus.configuration.environments=system -Pvividus.configuration.suite=system -Pvividus.configuration.profile=web/desktop/chrome
        else
            echo No BROWSERSTACK_USER and/or BROWSERSTACK_KEY and/or APPLITOOLS_EXECUTE_KEY and/or APPLITOOLS_READ_KEY variables, System tests will be skipped
        fi

    - name: Publish System tests report
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: System Tests - Allure report
        path: vividus-tests/output/reports/allure
