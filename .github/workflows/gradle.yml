name: Vividus CI

on:
  push:
    branches:
    - master
    tags:
    - release-[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches:
    - master

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Checkout (including submodules and tags)
      shell: bash
      # Fetch all history for all tags and branches: https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
      # Checkout submodules: https://github.com/actions/checkout#checkout-submodules
      run: |
        git fetch --prune --unshallow
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Cache ~/.gradle/caches
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Cache ~/.gradle/wrapper
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-


    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: 13.0.1

    - name: Build with Gradle
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        if [[ -n $SONAR_TOKEN ]]; then
            ./gradlew build sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=vividus -Dsonar.projectKey=vividus-framework_vividus -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=768m"
        else
            echo No SONAR_TOKEN, SonarQube analysis will be skipped
            ./gradlew build -Dorg.gradle.jvmargs="-Xmx2g -XX:MaxMetaspaceSize=768m"
        fi

    - name: Publish unit and integration tests reports - ${{ matrix.platform }}
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: Unit and Integration Tests - Reports - ${{ matrix.platform }}
        path: vividus/output/reports/tests

    - name: Upload coverage to Codecov
      if: matrix.platform == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

    - name: Integration tests
      if: matrix.platform == 'ubuntu-latest'
      run: ./gradlew :vividus-tests:runStories -Pvividus.configuration.environments=integration

    - name: Publish Integration tests report
      if: matrix.platform == 'ubuntu-latest' && always()
      uses: actions/upload-artifact@v1
      with:
        name: Integration Tests - Allure report - ${{ matrix.platform }}
        path: vividus-tests/output/reports/allure

    - name: System tests
      if: matrix.platform == 'ubuntu-latest'
      env:
        BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
        BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_KEY }}
        APPLITOOLS_EXECUTE_KEY: ${{ secrets.APPLITOOLS_EXECUTE_KEY }}
        APPLITOOLS_READ_KEY: ${{ secrets.APPLITOOLS_READ_KEY }}
      shell: bash
      run: |
        if [[ -n $BROWSERSTACK_USER && -n $BROWSERSTACK_KEY && -n $APPLITOOLS_READ_KEY && -n $APPLITOOLS_READ_KEY ]]; then
            ./gradlew :vividus-tests:runStories -Pvividus.configuration.environments=system \
                                                -Pvividus.configuration.suite=system \
                                                -Pvividus.configuration.profiles=browserstack/web,web/desktop/chrome \
                                                -Pvividus.selenium.grid.username=${BROWSERSTACK_USER} \
                                                -Pvividus.selenium.grid.password=${BROWSERSTACK_KEY}
        else
            echo No BROWSERSTACK_USER and/or BROWSERSTACK_KEY and/or APPLITOOLS_EXECUTE_KEY and/or APPLITOOLS_READ_KEY variables, System tests will be skipped
        fi

    - name: Publish System tests report
      if: matrix.platform == 'ubuntu-latest' && always()
      uses: actions/upload-artifact@v1
      with:
        name: System Tests - Allure report - ${{ matrix.platform }}
        path: vividus-tests/output/reports/allure

    - name: Browserstack Integration
      if: matrix.platform == 'ubuntu-latest'
      env:
        BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
        BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_KEY }}
      shell: bash
      run: |
        if [[ -n $BROWSERSTACK_USER && -n $BROWSERSTACK_KEY ]]; then
          declare -a profiles=( iexplore chrome firefox edge )
          for profile in "${profiles[@]}"; do
            ./gradlew runStories -Pvividus.configuration.environments=grid \
                                 -Pvividus.configuration.suite=grid \
                                 -Pvividus.configuration.profiles=browserstack/web,web/desktop/${profile} \
                                 -Pvividus.selenium.grid.username=${BROWSERSTACK_USER} \
                                 -Pvividus.selenium.grid.password=${BROWSERSTACK_KEY}
          done
        else
            echo No BROWSERSTACK_USER and/or BROWSERSTACK_KEY, Browserstack integration tests will be skipped
        fi

    - name: SauceLabs Integration
      if: matrix.platform == 'ubuntu-latest'
      env:
        SAUCELABS_USER: ${{ secrets.SAUCELABS_USER }}
        SAUCELABS_KEY: ${{ secrets.SAUCELABS_KEY }}
      shell: bash
      run: |
        if [[ -n $SAUCELABS_USER && -n $SAUCELABS_KEY ]]; then
          declare -a profiles=( iexplore chrome firefox edge )
          for profile in "${profiles[@]}"; do
            ./gradlew runStories -Pvividus.configuration.environments= \
                                 -Pvividus.configuration.suite=grid \
                                 -Pvividus.configuration.profiles=saucelabs/web,web/desktop/${profile} \
                                 -Pvividus.selenium.grid.username=${SAUCELABS_USER} \
                                 -Pvividus.selenium.grid.password=${SAUCELABS_KEY}
          done
        else
            echo No SAUCELABS_USER and/or SAUCELABS_KEY, SauceLabs integration tests will be skipped
        fi

    - name: Publish Snapshot Artifacts
      if: github.ref == 'refs/heads/master' && matrix.platform == 'ubuntu-latest'
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
      run: ./gradlew artifactoryPublish -Dartifactory.publish.contextUrl=http://oss.jfrog.org -Dartifactory.publish.repoKey=oss-snapshot-local -Dartifactory.publish.username=$BINTRAY_USER -Dartifactory.publish.password=$BINTRAY_KEY -Dartifactory.publish.buildInfo=false

    - name: Publish Release Artifacts
      if: startsWith(github.ref, 'refs/tags/release-') && matrix.platform == 'ubuntu-latest'
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
      run: ./gradlew bintrayUpload -Dbintray.user=$BINTRAY_USER -Dbintray.key=$BINTRAY_KEY
