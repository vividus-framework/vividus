project.description = 'VIVIDUS to Zephyr exporter'

buildscript {
    ext {
        springBootVersion = '2.7.14'
    }

    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath(group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: "${springBootVersion}")
    }
}
apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin

dependencies {
    // https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/257
    implementation platform(group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: "${springBootVersion}")

    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-validation')

    implementation(group: 'org.slf4j', name: 'slf4j-api', version: versions.slf4j)
    implementation platform(group: 'org.apache.logging.log4j', name: 'log4j-bom', version: '2.20.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-api')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-core')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl')

    implementation project(':vividus-util')
    implementation project(':vividus-facade-jira')
    implementation project(':vividus-exporter-commons')

    implementation(group: 'com.google.guava', name: 'guava', version: '32.1.2-jre')
    implementation(group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0')

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test')
    testImplementation platform(group: 'org.junit', name: 'junit-bom', version: '5.10.0')
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter')
    testImplementation platform(group: 'org.mockito', name: 'mockito-bom', version: '5.4.0')
    testImplementation(group: 'org.mockito', name: 'mockito-junit-jupiter')
    testImplementation(group: 'com.github.valfirst', name: 'slf4j-test', version: '3.0.1')
}

configurations.all {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

configurations.testImplementation {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j18-impl'
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}

// https://stackoverflow.com/a/62645933/2067574
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}
