project.description = 'VIVIDUS - Test automation tool'

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += compileClasspath
    }
    systemTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += compileClasspath
    }
}

configurations.integrationTestImplementation.extendsFrom configurations.implementation
configurations.systemTestImplementation.extendsFrom configurations.implementation

tasks.register('integrationTest', Test) {
    description = 'Runs Integration Tests'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
    useJUnitPlatform()
    jvmArgs += ['--add-opens=java.base/java.util=ALL-UNNAMED', '--add-opens=java.base/java.lang=ALL-UNNAMED']
}

tasks.register('systemTest', Test) {
    description = 'Runs System Tests'
    group = 'verification'
    testClassesDirs = sourceSets.systemTest.output.classesDirs
    classpath = sourceSets.systemTest.runtimeClasspath
    useJUnitPlatform()
    mustRunAfter test
}

// https://junit-pioneer.org/docs/environment-variables/#warnings-for-reflective-access
test {
    jvmArgs = [
            '--add-opens=java.base/java.util=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED'
    ]
}

check.dependsOn integrationTest
check.dependsOn systemTest

configurations.testImplementation {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
}

dependencies {
    api project(':vividus-engine')
    api project(':vividus-http-client')
    api project(':vividus-reporter')

    implementation project(':vividus-allure-adaptor')
    implementation project(':vividus-analytics')
    implementation project(':vividus-soft-assert')
    implementation project(':vividus-util')

    // Logging SLF4J + Log4j2
    implementation platform('org.slf4j:slf4j-bom:2.0.17')
    implementation('org.slf4j:slf4j-api')
    implementation('org.slf4j:jcl-over-slf4j') // Replace commons-logging with SLF4J
    implementation('org.slf4j:jul-to-slf4j') // JUL to SLF4J bridge
    implementation('org.slf4j:log4j-over-slf4j') // Log4J 1.x and Reload4J to SLF4J bridge

    implementation platform('org.apache.logging.log4j:log4j-bom:2.25.2')
    implementation('org.apache.logging.log4j:log4j-api')
    implementation('org.apache.logging.log4j:log4j-core')
    implementation('org.apache.logging.log4j:log4j-slf4j2-impl')
    annotationProcessor platform('org.apache.logging.log4j:log4j-bom:2.25.2')
    annotationProcessor('org.apache.logging.log4j:log4j-core')

    implementation('de.vandermeer:asciitable:0.3.2')

    // Meta filters based on Groovy
    implementation('org.apache.groovy:groovy:5.0.1')

    // Spring
    implementation platform('org.springframework:spring-framework-bom:6.2.11')
    implementation('org.springframework:spring-context')
    implementation('org.springframework.vault:spring-vault-core:3.2.0')

    implementation('jakarta.inject:jakarta.inject-api:2.0.1')
    implementation('commons-cli:commons-cli:1.10.0')
    // jasypt
    implementation('org.jasypt:jasypt-spring4:1.9.3')

    implementation('org.apache.commons:commons-lang3:3.19.0')
    implementation('org.apache.commons:commons-collections4:4.5.0')
    implementation('commons-codec:commons-codec:1.19.0')
    implementation('org.hamcrest:hamcrest:3.0')
    implementation('com.google.guava:guava:33.5.0-jre')
    implementation('io.github.classgraph:classgraph:4.8.180')
    implementation('io.github.java-diff-utils:java-diff-utils:4.16')
    implementation('org.apache.commons:commons-jexl3:3.5.0')
    implementation('net.datafaker:datafaker:2.5.1')

    compileOnly("com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}")

    testImplementation platform('org.junit:junit-bom:5.13.4')
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    testImplementation platform('org.mockito:mockito-bom:5.20.0')
    testImplementation('org.mockito:mockito-junit-jupiter')
    testImplementation('org.junit-pioneer:junit-pioneer:2.3.0')
    testImplementation('com.github.valfirst:slf4j-test:3.0.3')
    testImplementation('org.springframework:spring-test')

    integrationTestImplementation project(':vividus-plugin-azure-data-factory')
    integrationTestImplementation project(':vividus-plugin-avro')
    integrationTestImplementation project(':vividus-plugin-csv')
    integrationTestImplementation project(':vividus-plugin-excel')
    integrationTestImplementation project(':vividus-plugin-kafka')
    integrationTestImplementation project(':vividus-plugin-html')
    integrationTestImplementation project(':vividus-plugin-mobile-app')
    integrationTestImplementation project(':vividus-plugin-rest-api')
    integrationTestImplementation project(':vividus-plugin-saucelabs')
    integrationTestImplementation project(':vividus-plugin-ssh')
    integrationTestImplementation project(':vividus-plugin-visual')
    integrationTestImplementation project(':vividus-plugin-web-app-to-rest-api')
    integrationTestImplementation project(':vividus-plugin-web-app')
    integrationTestImplementation project(':vividus-plugin-winrm')
    integrationTestImplementation project(':vividus-plugin-xml')
    integrationTestImplementation project(':vividus-plugin-yaml')
    integrationTestImplementation(project(':vividus-mcp-server')) {
        exclude module: 'vividus'
    }
    integrationTestImplementation platform('org.junit:junit-bom:5.13.4')
    integrationTestImplementation('org.junit.jupiter:junit-jupiter')
    integrationTestRuntimeOnly('org.junit.platform:junit-platform-launcher')
    integrationTestImplementation('org.junit-pioneer:junit-pioneer:2.3.0')

    systemTestImplementation platform('org.junit:junit-bom:5.13.4')
    systemTestImplementation('org.junit.jupiter:junit-jupiter')
    systemTestRuntimeOnly('org.junit.platform:junit-platform-launcher')
    systemTestImplementation platform('org.testcontainers:testcontainers-bom:1.21.3')
    systemTestImplementation('org.testcontainers:testcontainers')
    systemTestImplementation('org.testcontainers:junit-jupiter')
    systemTestImplementation('org.testcontainers:vault')
}
