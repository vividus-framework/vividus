project.description = 'VIVIDUS - Test automation tool'

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += compileClasspath
    }
    systemTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += compileClasspath
    }
}

configurations.integrationTestImplementation.extendsFrom configurations.implementation
configurations.systemTestImplementation.extendsFrom configurations.implementation

tasks.register('integrationTest', Test) {
    description = 'Runs Integration Tests'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
    useJUnitPlatform()
    jvmArgs += ['--add-opens=java.base/java.util=ALL-UNNAMED', '--add-opens=java.base/java.lang=ALL-UNNAMED']
}

tasks.register('systemTest', Test) {
    description = 'Runs System Tests'
    group = 'verification'
    testClassesDirs = sourceSets.systemTest.output.classesDirs
    classpath = sourceSets.systemTest.runtimeClasspath
    useJUnitPlatform()
    mustRunAfter test
}

// https://junit-pioneer.org/docs/environment-variables/#warnings-for-reflective-access
test {
    jvmArgs = [
            '--add-opens=java.base/java.util=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED'
    ]
}

check.dependsOn integrationTest
check.dependsOn systemTest

configurations.testImplementation {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
}

dependencies {
    api project(':vividus-engine')
    api project(':vividus-http-client')
    api project(':vividus-reporter')

    implementation project(':vividus-allure-adaptor')
    implementation project(':vividus-analytics')
    implementation project(':vividus-soft-assert')
    implementation project(':vividus-util')

    // Logging SLF4J + Log4j2
    implementation platform(libs.slf4j.bom)
    implementation(libs.slf4j.api)
    implementation(libs.slf4j.jclOverSlf4j) // Replace commons-logging with SLF4J
    implementation(libs.slf4j.julToSlf4j) // JUL to SLF4J bridge
    implementation(libs.slf4j.log4jOverSlf4j) // Log4J 1.x and Reload4J to SLF4J bridge

    implementation platform('org.apache.logging.log4j:log4j-bom:2.25.2')
    implementation('org.apache.logging.log4j:log4j-api')
    implementation('org.apache.logging.log4j:log4j-core')
    implementation('org.apache.logging.log4j:log4j-slf4j2-impl')
    annotationProcessor platform('org.apache.logging.log4j:log4j-bom:2.25.2')
    annotationProcessor('org.apache.logging.log4j:log4j-core')

    implementation('de.vandermeer:asciitable:0.3.2')

    // Meta filters based on Groovy
    implementation('org.apache.groovy:groovy:5.0.2')

    // Spring
    implementation platform(libs.spring.bom)
    implementation(libs.spring.context)
    implementation('org.springframework.vault:spring-vault-core:3.2.0')

    implementation(libs.jakarta.injectApi)
    implementation('commons-cli:commons-cli:1.10.0')
    // jasypt
    implementation('org.jasypt:jasypt-spring4:1.9.3')

    implementation(libs.apache.commons.lang3)
    implementation(libs.apache.commons.collections4)
    implementation(libs.apache.commons.codec)
    implementation(libs.hamcrest)
    implementation(libs.guava)
    implementation('io.github.classgraph:classgraph:4.8.184')
    implementation('io.github.java-diff-utils:java-diff-utils:4.16')
    implementation('org.apache.commons:commons-jexl3:3.5.0')
    implementation('net.datafaker:datafaker:2.5.3')

    compileOnly("com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}")

    testImplementation platform(libs.junit.bom)
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly(libs.junit.platformLauncher)
    testImplementation platform(libs.mockito.bom)
    testImplementation(libs.mockito.junitJupiter)
    testImplementation(libs.junitPioneer)
    testImplementation(libs.slf4jTest)
    testImplementation(libs.spring.test)

    integrationTestImplementation project(':vividus-plugin-azure-data-factory')
    integrationTestImplementation project(':vividus-plugin-avro')
    integrationTestImplementation project(':vividus-plugin-csv')
    integrationTestImplementation project(':vividus-plugin-excel')
    integrationTestImplementation project(':vividus-plugin-kafka')
    integrationTestImplementation project(':vividus-plugin-html')
    integrationTestImplementation project(':vividus-plugin-mobile-app')
    integrationTestImplementation project(':vividus-plugin-rest-api')
    integrationTestImplementation project(':vividus-plugin-saucelabs')
    integrationTestImplementation project(':vividus-plugin-ssh')
    integrationTestImplementation project(':vividus-plugin-visual')
    integrationTestImplementation project(':vividus-plugin-web-app-to-rest-api')
    integrationTestImplementation project(':vividus-plugin-web-app')
    integrationTestImplementation project(':vividus-plugin-winrm')
    integrationTestImplementation project(':vividus-plugin-xml')
    integrationTestImplementation project(':vividus-plugin-yaml')
    integrationTestImplementation(project(':vividus-mcp-server')) {
        exclude module: 'vividus'
    }
    integrationTestImplementation platform(libs.junit.bom)
    integrationTestImplementation(libs.junit.jupiter)
    integrationTestRuntimeOnly(libs.junit.platformLauncher)
    integrationTestImplementation(libs.junitPioneer)

    systemTestImplementation platform(libs.junit.bom)
    systemTestImplementation(libs.junit.jupiter)
    systemTestRuntimeOnly(libs.junit.platformLauncher)
    systemTestImplementation platform('org.testcontainers:testcontainers-bom:2.0.1')
    systemTestImplementation('org.testcontainers:testcontainers')
    systemTestImplementation('org.testcontainers:testcontainers-junit-jupiter')
    systemTestImplementation('org.testcontainers:testcontainers-vault')
}
