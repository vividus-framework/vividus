buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}
ext.buildSystemDir = file("${System.env.VIVIDUS_BUILD_SYSTEM_HOME?:buildSystemRootDir}/${buildSystemVersion}")
ext.gradleScriptDir =  new File(ext.buildSystemDir, 'gradle')
apply from: "${gradleScriptDir}/project.gradle"
apply from: "${gradleScriptDir}/jacoco.gradle"
apply from: "${gradleScriptDir}/sonarqube.gradle"

def testProjectPostfix = '-tests'
def nonTestSubprojects = subprojects.findAll { !it.name.endsWith(testProjectPostfix) }

configure(subprojects.findAll { it.name.endsWith(testProjectPostfix) }) {
    apply from: "${buildSystemDir}/vividus-test-subproject.gradle"
}

configure(nonTestSubprojects) {
    apply plugin: 'com.jfrog.bintray'
    apply from: "${buildSystemDir}/vividus-library-subproject.gradle"

    dependencies {
        modules {
            module('org.hamcrest:hamcrest-core') {
                replacedBy('org.hamcrest:hamcrest', 'Use latest hamcrest version')
            }
        }
    }

    bintray {
        user = System.getProperty('bintray.user')
        key = System.getProperty('bintray.key')
        publications = ['maven']

        pkg {
            repo = 'maven-releases'
            name = "${project.group}.${project.name}"
            desc = project.description
            userOrg = 'vividus'
            licenses = ['Apache-2.0']
            websiteUrl = 'https://github.com/vividus-framework/vividus'
            issueTrackerUrl = 'https://github.com/vividus-framework/vividus/issues'
            vcsUrl = 'https://github.com/vividus-framework/vividus.git'
            publicDownloadNumbers = true
            version {
                name = project.version
                vcsTag = "release-${project.version}"
                released  = new Date()
            }
        }
    }
}

task jacocoAggregatedReport(type: JacocoReport) {
    nonTestSubprojects.each {
      executionData it.tasks.withType(Test)
    }
    dependsOn nonTestSubprojects.collect { it.tasks.withType(Test) }
    sourceDirectories.from(subprojects.sourceSets.main.java.sourceDirectories)
    classDirectories.from(subprojects.sourceSets.main.output)
}

project.description = 'Vividus'

ext {
    versions = [
        allure:                 '2.13.7',
        ashot:                  '1.5.4',
        commonsIo:              '2.8.0',
        commonsLang3:           '3.11',
        commonsText:            '1.9',
        commonsCollections4:    '4.4',
        groovy:                 '3.0.7',
        guava:                  '30.1-jre',
        hamcrest:               '2.2',
        httpclient:             '4.5.13',
        javaxInject:            '1',
        jbehave:                '5.0.0-alpha.3',
        junit4:                 '4.13.1',
        slf4j:                  '2.0.0-alpha1',
        spring:                 '5.3.3',
        tika:                   '1.24.1',
        junit:                  '5.7.1',
        mockito:                '3.7.0',
        powermock:              '2.0.9',
        slf4jTest:              '2.1.1'
    ]
}
