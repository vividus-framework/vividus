ext.buildSystemDir = file("${System.env.VIVIDUS_BUILD_SYSTEM_HOME?:buildSystemRootDir}/${buildSystemVersion}")
ext.gradleScriptDir =  new File(ext.buildSystemDir, 'gradle')
apply from: "${gradleScriptDir}/project.gradle"
apply from: "${gradleScriptDir}/jacoco.gradle"
apply from: "${gradleScriptDir}/sonarqube.gradle"


configure([project(':vividus-tests'), project(':vividus-docker-bundler')]) {
    apply from: "${buildSystemDir}/vividus-test-subproject.gradle"
}

def nonTestSubprojects = subprojects.findAll { !it.name.equals('vividus-tests') && !it.name.equals('vividus-docker-bundler') }
configure(nonTestSubprojects) {
    apply from: "${buildSystemDir}/vividus-library-subproject.gradle"

    dependencies {
        modules {
            module('org.hamcrest:hamcrest-core') {
                replacedBy('org.hamcrest:hamcrest', 'Use latest hamcrest version')
            }
        }
    }

    publishing {
        repositories {
            maven {
                name = 'GitHubPackages'
                url = 'https://maven.pkg.github.com/vividus-framework/vividus'
                credentials {
                    username = System.getenv('GITHUB_ACTOR')
                    password = System.getenv('GITHUB_TOKEN')
                }
            }
        }
    }
}

task jacocoAggregatedReport(type: JacocoReport) {
    nonTestSubprojects.each {
      executionData it.tasks.withType(Test)
    }
    dependsOn nonTestSubprojects.collect { it.tasks.withType(Test) }
    sourceDirectories.from(subprojects.sourceSets.main.java.sourceDirectories)
    classDirectories.from(subprojects.sourceSets.main.output)
}

project.description = 'Vividus'

ext {
    versions = [
        allure:                 '2.15.0',
        ashot:                  '1.5.4',
        commonsLang3:           '3.12.0',
        commonsText:            '1.9',
        commonsCollections4:    '4.4',
        guava:                  '30.1.1-jre',
        hamcrest:               '2.2',
        httpclient:             '4.5.13',
        javaxInject:            '1',
        jbehave:                '5.0.0-alpha.13',
        junit4:                 '4.13.1',
        slf4j:                  '2.0.0-alpha2',
        spring:                 '5.3.10',
        junit:                  '5.7.2',
        mockito:                '3.12.3',
        powermock:              '2.0.9',
        slf4jTest:              '2.4.0'
    ]
}
